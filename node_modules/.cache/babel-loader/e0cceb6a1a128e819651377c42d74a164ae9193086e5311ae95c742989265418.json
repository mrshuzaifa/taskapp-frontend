{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport taskService from './taskService';\nconst initialState = {\n  tasks: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  }\n});\nexport const createTask = createAsyncThunk('tasks/create', async (taskData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await taskService.createTask(taskData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const {\n  reset\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","taskService","initialState","tasks","isError","isSuccess","isLoading","message","taskSlice","name","reducers","reset","state","createTask","taskData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","actions","reducer"],"sources":["D:/Qanita/Experiments/Task-MERN/frontend/src/features/tasks/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport taskService from './taskService';\r\nconst initialState = {\r\n    tasks: [],\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n};\r\nexport const taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n    reset: state => initialState\r\n    }\r\n});\r\nexport const createTask = createAsyncThunk(\r\n    'tasks/create',\r\n    async (taskData, thunkAPI) => {\r\n        try {\r\n            const token = thunkAPI.getState().auth.user.token;\r\n            return await taskService.createTask(taskData, token);\r\n        } catch (error) {\r\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n)\r\nexport const { reset } = taskSlice.actions;\r\nexport default taskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACVC,KAAK,EAAEC,KAAK,IAAIV;EAChB;AACJ,CAAC,CAAC;AACF,OAAO,MAAMW,UAAU,GAAGb,gBAAgB,CACtC,cAAc,EACd,OAAOc,QAAQ,EAAEC,QAAQ,KAAK;EAC1B,IAAI;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;IACjD,OAAO,MAAMf,WAAW,CAACY,UAAU,CAACC,QAAQ,EAAEE,KAAK,CAAC;EACxD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,MAAMb,OAAO,GAAIa,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,IAAIF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACf,OAAO,IAAKa,KAAK,CAACb,OAAO,IAAIa,KAAK,CAACG,QAAQ,CAAC,CAAC;IAC3H,OAAOR,QAAQ,CAACS,eAAe,CAACjB,OAAO,CAAC;EAC5C;AACJ,CACJ,CAAC;AACD,OAAO,MAAM;EAAEI;AAAM,CAAC,GAAGH,SAAS,CAACiB,OAAO;AAC1C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}