{"ast":null,"code":"var _jsxFileName = \"D:\\\\Qanita\\\\Experiments\\\\Task-MERN\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTasks, reset } from '../features/tasks/taskSlice';\nimport TaskItem from './TaskItem';\nimport Spinner from './Spinner';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    tasks,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.tasks);\n  useEffect(() => {\n    if (isError) console.log(message);\n    dispatch(getTasks());\n    return () => dispatch(reset());\n  }, [navigate, isError, message, dispatch]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"content\",\n    children: [tasks.length > 0, \" ? (\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), \") : (\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => navigate('/'),\n      children: \"Add a Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n_s(TaskList, \"WVgpsF5R/Vc2eqSTkfV1X+ODNpE=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","getTasks","reset","TaskItem","Spinner","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","dispatch","navigate","tasks","isLoading","isError","message","state","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","task","_id","onClick","_c","$RefreshReg$"],"sources":["D:/Qanita/Experiments/Task-MERN/frontend/src/components/TaskList.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTasks, reset } from '../features/tasks/taskSlice';\r\nimport TaskItem from './TaskItem';\r\nimport Spinner from './Spinner';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst TaskList = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { tasks, isLoading, isError, message } = useSelector(state => state.tasks);\r\n    useEffect(() => {\r\n        if (isError) console.log(message)\r\n            dispatch(getTasks());\r\n            return () => dispatch(reset());\r\n        }, \r\n        [navigate, isError, message, dispatch]\r\n    );\r\n    return (\r\n        isLoading ? <Spinner /> : (\r\n            <section className='content'>\r\n                {tasks.length > 0} ? (\r\n                    <>\r\n                    <div className='tasks'>\r\n                    {tasks.map(task => <TaskItem key={task._id} task={task} />)}\r\n                    </div> \r\n                </>\r\n            ) : (\r\n                <button className='btn' onClick={() => navigate('/')}>Add a Task</button>\r\n            )\r\n            </section>\r\n        )\r\n    )\r\n};\r\nexport default TaskList;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,KAAK,QAAQ,6BAA6B;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,KAAK;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACJ,KAAK,CAAC;EAChFhB,SAAS,CAAC,MAAM;IACZ,IAAIkB,OAAO,EAAEG,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IAC7BL,QAAQ,CAACX,QAAQ,CAAC,CAAC,CAAC;IACpB,OAAO,MAAMW,QAAQ,CAACV,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC,EACD,CAACW,QAAQ,EAAEG,OAAO,EAAEC,OAAO,EAAEL,QAAQ,CACzC,CAAC;EACD,OACIG,SAAS,gBAAGR,OAAA,CAACH,OAAO;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBACnBjB,OAAA;IAASkB,SAAS,EAAC,SAAS;IAAAC,QAAA,GACvBZ,KAAK,CAACa,MAAM,GAAG,CAAC,EAAC,MACd,eAAApB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,eACAnB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAC,QAAA,EACrBZ,KAAK,CAACc,GAAG,CAACC,IAAI,iBAAItB,OAAA,CAACJ,QAAQ;UAAgB0B,IAAI,EAAEA;QAAK,GAArBA,IAAI,CAACC,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC,gBACR,CAAC,SAEH,eAAAjB,OAAA;MAAQkB,SAAS,EAAC,KAAK;MAACM,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC,GAAG,CAAE;MAAAa,QAAA,EAAC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAE7E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CACZ;AAET,CAAC;AAACb,EAAA,CA1BID,QAAQ;EAAA,QACOV,WAAW,EACXK,WAAW,EACmBN,WAAW;AAAA;AAAAiC,EAAA,GAHxDtB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}