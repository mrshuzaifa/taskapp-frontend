{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport taskService from './taskService';\nconst initialState = {\n  tasks: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(createTask.pending, state => {\n      state.isLoading = true;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.tasks.push(action.payload);\n    }).addCase(createTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = \"No Task Given\";\n    });\n  }\n});\nexport const createTask = createAsyncThunk('tasks/create', async (taskData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await taskService.createTask(taskData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const {\n  reset\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","taskService","initialState","tasks","isError","isSuccess","isLoading","message","taskSlice","name","reducers","reset","state","extraReducers","builder","addCase","createTask","pending","fulfilled","action","push","payload","rejected","taskData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","actions","reducer"],"sources":["D:/Qanita/Experiments/Task-MERN/frontend/src/features/tasks/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport taskService from './taskService';\r\nconst initialState = {\r\n    tasks: [],\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n};\r\nexport const taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        reset: state => initialState\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(createTask.pending, (state) => {\r\n            state.isLoading = true\r\n        })\r\n        .addCase(createTask.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            state.tasks.push(action.payload)\r\n        })\r\n        .addCase(createTask.rejected, (state, action) => {\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.message = \"No Task Given\"\r\n        })\r\n        }\r\n});\r\nexport const createTask = createAsyncThunk(\r\n    'tasks/create',\r\n    async (taskData, thunkAPI) => {\r\n        try {\r\n            const token = thunkAPI.getState().auth.user.token;\r\n            return await taskService.createTask(taskData, token);\r\n        } catch (error) {\r\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n)\r\nexport const { reset } = taskSlice.actions;\r\nexport default taskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACNC,KAAK,EAAEC,KAAK,IAAIV;EACpB,CAAC;EACDW,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAGL,KAAK,IAAK;MACpCA,KAAK,CAACN,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDS,OAAO,CAACC,UAAU,CAACE,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC9CP,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACT,KAAK,CAACiB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC,CAAC,CACDN,OAAO,CAACC,UAAU,CAACM,QAAQ,EAAE,CAACV,KAAK,EAAEO,MAAM,KAAK;MAC7CP,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACR,OAAO,GAAG,IAAI;MACpBQ,KAAK,CAACL,OAAO,GAAG,eAAe;IACnC,CAAC,CAAC;EACF;AACR,CAAC,CAAC;AACF,OAAO,MAAMS,UAAU,GAAGhB,gBAAgB,CACtC,cAAc,EACd,OAAOuB,QAAQ,EAAEC,QAAQ,KAAK;EAC1B,IAAI;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;IACjD,OAAO,MAAMxB,WAAW,CAACe,UAAU,CAACO,QAAQ,EAAEE,KAAK,CAAC;EACxD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,MAAMtB,OAAO,GAAIsB,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,IAAIF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACxB,OAAO,IAAKsB,KAAK,CAACtB,OAAO,IAAIsB,KAAK,CAACG,QAAQ,CAAC,CAAC;IAC3H,OAAOR,QAAQ,CAACS,eAAe,CAAC1B,OAAO,CAAC;EAC5C;AACJ,CACJ,CAAC;AACD,OAAO,MAAM;EAAEI;AAAM,CAAC,GAAGH,SAAS,CAAC0B,OAAO;AAC1C,eAAe1B,SAAS,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}